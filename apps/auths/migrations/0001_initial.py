# Generated by Django 4.2.5 on 2023-09-22 03:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=150, unique=True, verbose_name='логин')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='фамилия')),
                ('surname', models.CharField(blank=True, max_length=255, null=True, verbose_name='имя')),
                ('patronymic', models.CharField(blank=True, max_length=255, null=True, verbose_name='отчество')),
                ('title', models.CharField(blank=True, max_length=300, null=True, verbose_name='title')),
                ('phone', models.PositiveBigIntegerField(blank=True, null=True, verbose_name='контактный телефон')),
                ('is_active', models.BooleanField(default=True, verbose_name='активность')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='является администратором')),
                ('is_staff', models.BooleanField(default=False, verbose_name='является штатным сотрудником')),
                ('date_of_creation', models.DateTimeField(auto_now_add=True, verbose_name='дата создания')),
                ('date_of_change', models.DateTimeField(auto_now=True, verbose_name='дата изменения')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
        ),
    ]
